################################################################################
################################################################################
# For the following two check scripts/min-tool-version.sh of your kernel
# Rust toolchain version
RUST_VERSION=1.62.0
# Bindgen version
BINDGEN_VERSION=0.56.0

KERNEL_SOURCE_URL=https://cdn.kernel.org/pub/linux/kernel/v6.x/linux-6.4.3.tar.xz
KERNEL_ARCHIVE_NAME=$(echo ${KERNEL_SOURCE_URL} | rev | cut -d '/' -f 1 | rev)
KERNEL_BUILD_JOBS=4

# Global config
DUNAME=$(id -nu)
DUID=$(id -u)
DGID=$(id -g)
DOCKER_SUDO=""
# DOCKER_SUDO="sudo"
# DOCKER_PLATFORM="linux/amd64"
DOCKER_RUN_ADD_OPT="--privileged"
# DOCKER_RUN_ADD_OPT=""
# DOCKER_TAG_APPEND="-custom"
DOCKER_TAG_APPEND=""

################################################################################
################################################################################
# Configuration for rkbuilder docker image
RKB_DOCKERFILE_DIRPATH="docker/rkbuilder/"
RKB_TAG="rkbuilder:rust-${RUST_VERSION}-bindgen-${BINDGEN_VERSION}${DOCKER_TAG_APPEND}"
RKB_RUN_NAME="rkbuilder-${RUST_VERSION}-${BINDGEN_VERSION}${DOCKER_TAG_APPEND}"
RKB_UBUNTU_VERSION=22.04
RKB_UNAME="${DUNAME}"
RKB_UID=${DUID}
RKB_GID=${DGID}
RKB_WORKDIR="/home/${RKB_UNAME}/workspace"
RKB_DOCKER_RUN_ADD_OPT=""

################################################################################
################################################################################
# Configuration for rkrootfs docker image
RFS_DOCKERFILE_DIRPATH="docker/rootfs/"
RFS_TAG="rkrootfs:rust-${RUST_VERSION}-bindgen-${BINDGEN_VERSION}${DOCKER_TAG_APPEND}"
RFS_RUN_NAME="rkrootfs-${RUST_VERSION}-${BINDGEN_VERSION}${DOCKER_TAG_APPEND}"
RFS_UBUNTU_VERSION=22.04
RFS_UNAME="${DUNAME}"
RFS_UID=1000
RFS_GID=1000
RFS_WORKDIR="/home/${RFS_UNAME}/workspace"
RFS_DOCKER_RUN_ADD_OPT="${DOCKER_RUN_ADD_OPT}"
# https://www.debian.org/releases
RFS_DISTRIBUTION=bullseye
RFS_PACKAGES=build-essential,vim,openssh-server,make,sudo,curl,tar,gcc,libc6-dev,time,strace,less,psmisc,selinux-utils,policycoreutils,checkpolicy,selinux-policy-default,firmware-atheros,openssl,plymouth,file
RFS_HOSTNAME=ROUSTKIT
RFS_ARCH=x86_64
RFS_TYPE=ext4
RFS_USER=user
# Destination directory where the created rootfs will be finally copied
RFS_DST_DIR="${RFS_WORKDIR}/rootfs"
# Name of the created rootfs inside RFS_DST_DIR
RFS_NAME="${RFS_DISTRIBUTION}-${RFS_ARCH}-${RFS_TYPE}"
# Directory inside the container where the rootfs will be created with
# debootstrap
RFS_MNT_BASE="/rootfs"

################################################################################
################################################################################
# Configuration for rkqemu docker image
RKE_DOCKERFILE_DIRPATH="docker/qemu/"
RKE_TAG="rkqemu:rust-${RUST_VERSION}-bindgen-${BINDGEN_VERSION}${DOCKER_TAG_APPEND}"
RKE_RUN_NAME="rkqemu-${RUST_VERSION}-${BINDGEN_VERSION}${DOCKER_TAG_APPEND}"
RKE_UBUNTU_VERSION=22.04
RKE_UNAME="${DUNAME}"
RKE_UID=1000
RKE_GID=1000
RKE_WORKDIR="/home/${RKE_UNAME}/workspace"
# Port mapping must patch the configuration in RKE_QEMU_NET
RKE_DOCKER_RUN_ADD_OPT="${DOCKER_RUN_ADD_OPT} -p 10021:10021"
RKE_QEMU_SMP=1
RKE_QEMU_ARCH=x86_64
RKE_QEMU_CPU=qemu64
# RKE_QEMU_CPU=qemu64,+smep,+smap
RKE_QEMU_MEM=1024
RKE_QEMU_KIMAGE="${RKE_WORKDIR}/kernel/build/arch/x86_64/boot/bzImage"
RKE_QEMU_APPEND="console=ttyS0 root=/dev/sda earlyprintk=serial net.ifnames=0 nokaslr nosmep nosmap nopti oops=panic panic=0"
# RKE_QEMU_APPEND="console=ttyS0 root=/dev/sda earlyprintk=serial net.ifnames=0 kaslr pti=on oops=panic panic=0"
RKE_QEMU_NET="-net user,host=10.0.2.10,hostfwd=tcp:0.0.0.0:10021-:22 -net nic,model=e1000"
RKE_QEMU_GRAPHIC="-nographic"
RKE_QEMU_PIDFILE="/tmp/vm.pid"
# RKE_QEMU_KVM="-enable-kvm -S -s"
RKE_QEMU_KVM=""
RKE_QEMU_FSMOUNT="-drive file=${RFS_DST_DIR}/${RFS_NAME},format=raw"
# RKE_QEMU_FSMOUNT="-drive file=${RFS_DST_DIR}/${RFS_NAME}"
# RKE_QEMU_FSMOUNT="-initrd ${RFS_DST_DIR}/${RFS_NAME}"

