################################################################################
################################################################################
# For the following two check scripts/min-tool-version.sh of your kernel
# Rust toolchain version
RUST_VERSION=1.62.0
# Bindgen version
BINDGEN_VERSION=0.56.0

KERNEL_SOURCE_URL=https://cdn.kernel.org/pub/linux/kernel/v6.x/linux-6.4.1.tar.xz
KERNEL_ARCHIVE_NAME=$(echo ${KERNEL_SOURCE_URL} | rev | cut -d '/' -f 1 | rev)

# Global config
DUNAME=$(id -nu)
DUID=$(id -u)
DGID=$(id -g)
DOCKER_SUDO=""
# DOCKER_SUDO="sudo"
# DOCKER_PLATFORM="linux/amd64"
DOCKER_RUN_ADD_OPT="--privileged"
# DOCKER_RUN_ADD_OPT=""
# DOCKER_TAG_APPEND="-custom"
DOCKER_TAG_APPEND=""

################################################################################
################################################################################
# Configuration for lkbuilder docker image
LKB_DOCKERFILE_DIRPATH="docker/lkbuilder/"
LKB_TAG="lkbuilder:rust-${RUST_VERSION}-bindgen-${BINDGEN_VERSION}${DOCKER_TAG_APPEND}"
LKB_RUN_NAME="lkbuilder-${RUST_VERSION}-${BINDGEN_VERSION}${DOCKER_TAG_APPEND}"
LKB_UBUNTU_VERSION=22.04
LKB_UNAME="${DUNAME}"
LKB_UID=${DUID}
LKB_GID=${DGID}
LKB_WORKDIR="/home/${LKB_UNAME}/workspace"
LKB_DOCKER_RUN_ADD_OPT=""

################################################################################
################################################################################
# Configuration for rootfs docker image
RFS_DOCKERFILE_DIRPATH="docker/rootfs/"
RFS_TAG="rootfs:rust-${RUST_VERSION}-bindgen-${BINDGEN_VERSION}${DOCKER_TAG_APPEND}"
RFS_RUN_NAME="rootfs-${RUST_VERSION}-${BINDGEN_VERSION}${DOCKER_TAG_APPEND}"
RFS_UBUNTU_VERSION=22.04
RFS_UNAME="${DUNAME}"
RFS_UID=1000
RFS_GID=1000
RFS_WORKDIR="/home/${RFS_UNAME}/workspace"
RFS_DOCKER_RUN_ADD_OPT="${DOCKER_RUN_ADD_OPT}"
# https://www.debian.org/releases
RFS_DISTRIBUTION=bullseye
RFS_PACKAGES=build-essential,vim,openssh-server,make,sudo,curl,tar,gcc,libc6-dev,time,strace,less,psmisc,selinux-utils,policycoreutils,checkpolicy,selinux-policy-default,firmware-atheros,openssl,plymouth,file
RFS_HOSTNAME=ROUSTKIT
RFS_ARCH=x86_64
RFS_TYPE=ext4
RFS_USER=user
# Destination directory where the created rootfs will be finally copied
RFS_DST_DIR="${RFS_WORKDIR}/rootfs"
# Name of the created rootfs inside RFS_DST_DIR
RFS_NAME="${RFS_DISTRIBUTION}-${RFS_ARCH}-${RFS_TYPE}"
# Directory inside the container where the rootfs will be created with
# debootstrap
RFS_MNT_BASE="/rootfs"
